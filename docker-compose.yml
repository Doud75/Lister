version: '3.8'

services:  
  backend:
    build:
      context: ./backend
    restart: unless-stopped
    env_file: .env
    ports:
      - "8089:8089"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - VITE_ORIGIN=${VITE_ORIGIN}
    networks:
      - app-network
    depends_on:
      - backend

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d setlistdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  migrator:
    build:
      context: ./backend
      target: builder
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    networks:
      - app-network
    command: ["/bin/sh", "-c", "sleep 5 && /go/bin/migrate -path db/migrations -database $DATABASE_URL up"]

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
